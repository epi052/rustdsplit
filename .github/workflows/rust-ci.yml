# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.
# name: Test Rust project
# on: [push]
# jobs:
#   test:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]
#         rust: [stable, nightly]

#     steps:
#     - uses: hecrj/setup-rust-action@v1
#       with:
#         rust-version: ${{ matrix.rust }}
#     - uses: actions/checkout@master
#     - name: Run tests
#       run: cargo test --verbose

on: [push, pull_request]

name: Cross-compile

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
  build-macos:
    name: Build MacOS
    runs-on: macOS-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
